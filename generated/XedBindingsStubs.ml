(* "Low level" binding functions, not to be exposed. *)
open Ctypes

let address_width_enum = XedBindingsEnums.(view ~read:address_width_of_int ~write:address_width_to_int int)
let attribute_enum = XedBindingsEnums.(view ~read:attribute_of_int ~write:attribute_to_int int)
let category_enum = XedBindingsEnums.(view ~read:category_of_int ~write:category_to_int int)
let chip_enum = XedBindingsEnums.(view ~read:chip_of_int ~write:chip_to_int int)
let cpuid_bit_enum = XedBindingsEnums.(view ~read:cpuid_bit_of_int ~write:cpuid_bit_to_int int)
let error_enum = XedBindingsEnums.(view ~read:error_of_int ~write:error_to_int int)
let extension_enum = XedBindingsEnums.(view ~read:extension_of_int ~write:extension_to_int int)
let flag_enum = XedBindingsEnums.(view ~read:flag_of_int ~write:flag_to_int int)
let flag_action_enum = XedBindingsEnums.(view ~read:flag_action_of_int ~write:flag_action_to_int int)
let iclass_enum = XedBindingsEnums.(view ~read:iclass_of_int ~write:iclass_to_int int)
let iexception_enum = XedBindingsEnums.(view ~read:iexception_of_int ~write:iexception_to_int int)
let iform_enum = XedBindingsEnums.(view ~read:iform_of_int ~write:iform_to_int int)
let isa_set_enum = XedBindingsEnums.(view ~read:isa_set_of_int ~write:isa_set_to_int int)
let machine_mode_enum = XedBindingsEnums.(view ~read:machine_mode_of_int ~write:machine_mode_to_int int)
let nonterminal_enum = XedBindingsEnums.(view ~read:nonterminal_of_int ~write:nonterminal_to_int int)
let operand_enum = XedBindingsEnums.(view ~read:operand_of_int ~write:operand_to_int int)
let operand_action_enum = XedBindingsEnums.(view ~read:operand_action_of_int ~write:operand_action_to_int int)
let operand_convert_enum = XedBindingsEnums.(view ~read:operand_convert_of_int ~write:operand_convert_to_int int)
let operand_element_type_enum = XedBindingsEnums.(view ~read:operand_element_type_of_int ~write:operand_element_type_to_int int)
let operand_element_xtype_enum = XedBindingsEnums.(view ~read:operand_element_xtype_of_int ~write:operand_element_xtype_to_int int)
let operand_type_enum = XedBindingsEnums.(view ~read:operand_type_of_int ~write:operand_type_to_int int)
let operand_visibility_enum = XedBindingsEnums.(view ~read:operand_visibility_of_int ~write:operand_visibility_to_int int)
let operand_width_enum = XedBindingsEnums.(view ~read:operand_width_of_int ~write:operand_width_to_int int)
let reg_enum = XedBindingsEnums.(view ~read:reg_of_int ~write:reg_to_int int)
let reg_class_enum = XedBindingsEnums.(view ~read:reg_class_of_int ~write:reg_class_to_int int)
let syntax_enum = XedBindingsEnums.(view ~read:syntax_of_int ~write:syntax_to_int int)
type enc_displacement_struct
let enc_displacement_struct : enc_displacement_struct structure typ = structure ""
let enc_displacement_struct_dat = field enc_displacement_struct "dat" @@ array 16 char
let () = seal enc_displacement_struct
type enc_displacement
let enc_displacement_view : enc_displacement typ = view ~read:Obj.magic ~write:Obj.magic (typedef enc_displacement_struct "xed_enc_displacement_t")

type encoder_operand_struct
let encoder_operand_struct : encoder_operand_struct structure typ = structure ""
let encoder_operand_struct_dat = field encoder_operand_struct "dat" @@ array 48 char
let () = seal encoder_operand_struct
type encoder_operand
let encoder_operand_view : encoder_operand typ = view ~read:Obj.magic ~write:Obj.magic (typedef encoder_operand_struct "xed_encoder_operand_t")

let chip_features_arg : [`Read]                  XedBindingsStructs.ChipFeatures.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_chip_features_t")
let chip_features_ret : [`Read|`Write of [`No]]  XedBindingsStructs.ChipFeatures.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_chip_features_t")
let chip_features_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.ChipFeatures.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_chip_features_t")
let decoded_inst_arg : [`Read]                  XedBindingsStructs.DecodedInst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_decoded_inst_t")
let decoded_inst_ret : [`Read|`Write of [`No]]  XedBindingsStructs.DecodedInst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_decoded_inst_t")
let decoded_inst_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.DecodedInst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_decoded_inst_t")
let encoder_instruction_arg : [`Read]                  XedBindingsStructs.EncoderInstruction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_encoder_instruction_t")
let encoder_instruction_ret : [`Read|`Write of [`No]]  XedBindingsStructs.EncoderInstruction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_encoder_instruction_t")
let encoder_instruction_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.EncoderInstruction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_encoder_instruction_t")
let encoder_request_arg : [`Read]                  XedBindingsStructs.EncoderRequest.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_encoder_request_t")
let encoder_request_ret : [`Read|`Write of [`No]]  XedBindingsStructs.EncoderRequest.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_encoder_request_t")
let encoder_request_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.EncoderRequest.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_encoder_request_t")
let flag_action_arg : [`Read]                  XedBindingsStructs.FlagAction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_flag_action_t")
let flag_action_ret : [`Read|`Write of [`No]]  XedBindingsStructs.FlagAction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_flag_action_t")
let flag_action_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.FlagAction.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_flag_action_t")
let flag_set_arg : [`Read]                  XedBindingsStructs.FlagSet.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_flag_set_t")
let flag_set_ret : [`Read|`Write of [`No]]  XedBindingsStructs.FlagSet.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_flag_set_t")
let flag_set_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.FlagSet.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_flag_set_t")
let inst_arg : [`Read]                  XedBindingsStructs.Inst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_inst_t")
let inst_ret : [`Read|`Write of [`No]]  XedBindingsStructs.Inst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_inst_t")
let inst_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.Inst.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_inst_t")
let operand_arg : [`Read]                  XedBindingsStructs.Operand.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_operand_t")
let operand_ret : [`Read|`Write of [`No]]  XedBindingsStructs.Operand.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_operand_t")
let operand_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.Operand.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_operand_t")
let operand_values_arg : [`Read]                  XedBindingsStructs.OperandValues.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_operand_values_t")
let operand_values_ret : [`Read|`Write of [`No]]  XedBindingsStructs.OperandValues.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_operand_values_t")
let operand_values_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.OperandValues.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_operand_values_t")
let simple_flag_arg : [`Read]                  XedBindingsStructs.SimpleFlag.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_simple_flag_t")
let simple_flag_ret : [`Read|`Write of [`No]]  XedBindingsStructs.SimpleFlag.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_simple_flag_t")
let simple_flag_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.SimpleFlag.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_simple_flag_t")
let state_arg : [`Read]                  XedBindingsStructs.State.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_state_t")
let state_ret : [`Read|`Write of [`No]]  XedBindingsStructs.State.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "const xed_state_t")
let state_mut : [`Read|`Write of [`Yes]] XedBindingsStructs.State.t typ = view ~read:Obj.magic ~write:Obj.magic @@ ptr (typedef void "xed_state_t")

module Bindings (F : Cstubs.FOREIGN) = struct
open F

  let str2xed_address_width_enum_t = foreign "str2xed_address_width_enum_t" (string @-> returning address_width_enum)
  let str2xed_attribute_enum_t = foreign "str2xed_attribute_enum_t" (string @-> returning attribute_enum)
  let str2xed_category_enum_t = foreign "str2xed_category_enum_t" (string @-> returning category_enum)
  let str2xed_chip_enum_t = foreign "str2xed_chip_enum_t" (string @-> returning chip_enum)
  let str2xed_cpuid_bit_enum_t = foreign "str2xed_cpuid_bit_enum_t" (string @-> returning cpuid_bit_enum)
  let str2xed_error_enum_t = foreign "str2xed_error_enum_t" (string @-> returning error_enum)
  let str2xed_exception_enum_t = foreign "str2xed_exception_enum_t" (string @-> returning iexception_enum)
  let str2xed_extension_enum_t = foreign "str2xed_extension_enum_t" (string @-> returning extension_enum)
  let str2xed_flag_action_enum_t = foreign "str2xed_flag_action_enum_t" (string @-> returning flag_action_enum)
  let str2xed_flag_enum_t = foreign "str2xed_flag_enum_t" (string @-> returning flag_enum)
  let str2xed_iclass_enum_t = foreign "str2xed_iclass_enum_t" (string @-> returning iclass_enum)
  let str2xed_iform_enum_t = foreign "str2xed_iform_enum_t" (string @-> returning iform_enum)
  let str2xed_isa_set_enum_t = foreign "str2xed_isa_set_enum_t" (string @-> returning isa_set_enum)
  let str2xed_machine_mode_enum_t = foreign "str2xed_machine_mode_enum_t" (string @-> returning machine_mode_enum)
  let str2xed_nonterminal_enum_t = foreign "str2xed_nonterminal_enum_t" (string @-> returning nonterminal_enum)
  let str2xed_operand_action_enum_t = foreign "str2xed_operand_action_enum_t" (string @-> returning operand_action_enum)
  let str2xed_operand_convert_enum_t = foreign "str2xed_operand_convert_enum_t" (string @-> returning operand_convert_enum)
  let str2xed_operand_element_type_enum_t = foreign "str2xed_operand_element_type_enum_t" (string @-> returning operand_element_type_enum)
  let str2xed_operand_element_xtype_enum_t = foreign "str2xed_operand_element_xtype_enum_t" (string @-> returning operand_element_xtype_enum)
  let str2xed_operand_enum_t = foreign "str2xed_operand_enum_t" (string @-> returning operand_enum)
  let str2xed_operand_type_enum_t = foreign "str2xed_operand_type_enum_t" (string @-> returning operand_type_enum)
  let str2xed_operand_visibility_enum_t = foreign "str2xed_operand_visibility_enum_t" (string @-> returning operand_visibility_enum)
  let str2xed_operand_width_enum_t = foreign "str2xed_operand_width_enum_t" (string @-> returning operand_width_enum)
  let str2xed_reg_class_enum_t = foreign "str2xed_reg_class_enum_t" (string @-> returning reg_class_enum)
  let str2xed_reg_enum_t = foreign "str2xed_reg_enum_t" (string @-> returning reg_enum)
  let str2xed_syntax_enum_t = foreign "str2xed_syntax_enum_t" (string @-> returning syntax_enum)
  let xed3_operand_get_agen = foreign "xed3_operand_get_agen" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_amd3dnow = foreign "xed3_operand_get_amd3dnow" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_asz = foreign "xed3_operand_get_asz" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_base0 = foreign "xed3_operand_get_base0" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_base1 = foreign "xed3_operand_get_base1" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_bcast = foreign "xed3_operand_get_bcast" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_bcrc = foreign "xed3_operand_get_bcrc" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_brdisp_width = foreign "xed3_operand_get_brdisp_width" (decoded_inst_arg @-> returning char)
  let xed3_operand_get_cet = foreign "xed3_operand_get_cet" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_chip = foreign "xed3_operand_get_chip" (decoded_inst_arg @-> returning chip_enum)
  let xed3_operand_get_cldemote = foreign "xed3_operand_get_cldemote" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_default_seg = foreign "xed3_operand_get_default_seg" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_df32 = foreign "xed3_operand_get_df32" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_df64 = foreign "xed3_operand_get_df64" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_disp = foreign "xed3_operand_get_disp" (decoded_inst_arg @-> returning int64_t)
  let xed3_operand_get_disp_width = foreign "xed3_operand_get_disp_width" (decoded_inst_arg @-> returning char)
  let xed3_operand_get_dummy = foreign "xed3_operand_get_dummy" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_easz = foreign "xed3_operand_get_easz" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_element_size = foreign "xed3_operand_get_element_size" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_encode_force = foreign "xed3_operand_get_encode_force" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_encoder_preferred = foreign "xed3_operand_get_encoder_preferred" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_eosz = foreign "xed3_operand_get_eosz" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_error = foreign "xed3_operand_get_error" (decoded_inst_arg @-> returning error_enum)
  let xed3_operand_get_esrc = foreign "xed3_operand_get_esrc" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_first_f2f3 = foreign "xed3_operand_get_first_f2f3" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_has_modrm = foreign "xed3_operand_get_has_modrm" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_has_sib = foreign "xed3_operand_get_has_sib" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_hint = foreign "xed3_operand_get_hint" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_iclass = foreign "xed3_operand_get_iclass" (decoded_inst_arg @-> returning iclass_enum)
  let xed3_operand_get_ild_f2 = foreign "xed3_operand_get_ild_f2" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_ild_f3 = foreign "xed3_operand_get_ild_f3" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_ild_seg = foreign "xed3_operand_get_ild_seg" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_imm0 = foreign "xed3_operand_get_imm0" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_imm0signed = foreign "xed3_operand_get_imm0signed" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_imm1 = foreign "xed3_operand_get_imm1" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_imm1_bytes = foreign "xed3_operand_get_imm1_bytes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_imm_width = foreign "xed3_operand_get_imm_width" (decoded_inst_arg @-> returning char)
  let xed3_operand_get_index = foreign "xed3_operand_get_index" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_last_f2f3 = foreign "xed3_operand_get_last_f2f3" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_llrc = foreign "xed3_operand_get_llrc" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_lock = foreign "xed3_operand_get_lock" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_lzcnt = foreign "xed3_operand_get_lzcnt" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_map = foreign "xed3_operand_get_map" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mask = foreign "xed3_operand_get_mask" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_max_bytes = foreign "xed3_operand_get_max_bytes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mem0 = foreign "xed3_operand_get_mem0" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mem1 = foreign "xed3_operand_get_mem1" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mem_width = foreign "xed3_operand_get_mem_width" (decoded_inst_arg @-> returning uint16_t)
  let xed3_operand_get_mod = foreign "xed3_operand_get_mod" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mode = foreign "xed3_operand_get_mode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mode_first_prefix = foreign "xed3_operand_get_mode_first_prefix" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mode_short_ud0 = foreign "xed3_operand_get_mode_short_ud0" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_modep5 = foreign "xed3_operand_get_modep5" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_modep55c = foreign "xed3_operand_get_modep55c" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_modrm_byte = foreign "xed3_operand_get_modrm_byte" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_mpxmode = foreign "xed3_operand_get_mpxmode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_must_use_evex = foreign "xed3_operand_get_must_use_evex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_need_memdisp = foreign "xed3_operand_get_need_memdisp" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_need_sib = foreign "xed3_operand_get_need_sib" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_needrex = foreign "xed3_operand_get_needrex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_nelem = foreign "xed3_operand_get_nelem" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_no_evex = foreign "xed3_operand_get_no_evex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_no_vex = foreign "xed3_operand_get_no_vex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_nominal_opcode = foreign "xed3_operand_get_nominal_opcode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_norex = foreign "xed3_operand_get_norex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_nprefixes = foreign "xed3_operand_get_nprefixes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_nrexes = foreign "xed3_operand_get_nrexes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_nseg_prefixes = foreign "xed3_operand_get_nseg_prefixes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_osz = foreign "xed3_operand_get_osz" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_out_of_bytes = foreign "xed3_operand_get_out_of_bytes" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_outreg = foreign "xed3_operand_get_outreg" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_p4 = foreign "xed3_operand_get_p4" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_disp = foreign "xed3_operand_get_pos_disp" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_imm = foreign "xed3_operand_get_pos_imm" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_imm1 = foreign "xed3_operand_get_pos_imm1" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_modrm = foreign "xed3_operand_get_pos_modrm" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_nominal_opcode = foreign "xed3_operand_get_pos_nominal_opcode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_pos_sib = foreign "xed3_operand_get_pos_sib" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_prefix66 = foreign "xed3_operand_get_prefix66" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_ptr = foreign "xed3_operand_get_ptr" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_realmode = foreign "xed3_operand_get_realmode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_reg = foreign "xed3_operand_get_reg" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_reg0 = foreign "xed3_operand_get_reg0" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg1 = foreign "xed3_operand_get_reg1" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg2 = foreign "xed3_operand_get_reg2" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg3 = foreign "xed3_operand_get_reg3" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg4 = foreign "xed3_operand_get_reg4" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg5 = foreign "xed3_operand_get_reg5" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg6 = foreign "xed3_operand_get_reg6" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg7 = foreign "xed3_operand_get_reg7" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg8 = foreign "xed3_operand_get_reg8" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_reg9 = foreign "xed3_operand_get_reg9" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_relbr = foreign "xed3_operand_get_relbr" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rep = foreign "xed3_operand_get_rep" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rex = foreign "xed3_operand_get_rex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rexb = foreign "xed3_operand_get_rexb" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rexr = foreign "xed3_operand_get_rexr" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rexrr = foreign "xed3_operand_get_rexrr" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rexw = foreign "xed3_operand_get_rexw" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rexx = foreign "xed3_operand_get_rexx" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_rm = foreign "xed3_operand_get_rm" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_roundc = foreign "xed3_operand_get_roundc" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_sae = foreign "xed3_operand_get_sae" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_scale = foreign "xed3_operand_get_scale" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_seg0 = foreign "xed3_operand_get_seg0" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_seg1 = foreign "xed3_operand_get_seg1" (decoded_inst_arg @-> returning reg_enum)
  let xed3_operand_get_seg_ovd = foreign "xed3_operand_get_seg_ovd" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_sibbase = foreign "xed3_operand_get_sibbase" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_sibindex = foreign "xed3_operand_get_sibindex" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_sibscale = foreign "xed3_operand_get_sibscale" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_smode = foreign "xed3_operand_get_smode" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_srm = foreign "xed3_operand_get_srm" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_tzcnt = foreign "xed3_operand_get_tzcnt" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_ubit = foreign "xed3_operand_get_ubit" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_uimm0 = foreign "xed3_operand_get_uimm0" (decoded_inst_arg @-> returning uint64_t)
  let xed3_operand_get_uimm1 = foreign "xed3_operand_get_uimm1" (decoded_inst_arg @-> returning char)
  let xed3_operand_get_using_default_segment0 = foreign "xed3_operand_get_using_default_segment0" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_using_default_segment1 = foreign "xed3_operand_get_using_default_segment1" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vex_c4 = foreign "xed3_operand_get_vex_c4" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vex_prefix = foreign "xed3_operand_get_vex_prefix" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vexdest210 = foreign "xed3_operand_get_vexdest210" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vexdest3 = foreign "xed3_operand_get_vexdest3" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vexdest4 = foreign "xed3_operand_get_vexdest4" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vexvalid = foreign "xed3_operand_get_vexvalid" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_vl = foreign "xed3_operand_get_vl" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_wbnoinvd = foreign "xed3_operand_get_wbnoinvd" (decoded_inst_arg @-> returning int)
  let xed3_operand_get_zeroing = foreign "xed3_operand_get_zeroing" (decoded_inst_arg @-> returning int)
  let xed3_operand_set_agen = foreign "xed3_operand_set_agen" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_amd3dnow = foreign "xed3_operand_set_amd3dnow" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_asz = foreign "xed3_operand_set_asz" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_base0 = foreign "xed3_operand_set_base0" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_base1 = foreign "xed3_operand_set_base1" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_bcast = foreign "xed3_operand_set_bcast" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_bcrc = foreign "xed3_operand_set_bcrc" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_brdisp_width = foreign "xed3_operand_set_brdisp_width" (decoded_inst_mut @-> char @-> returning void)
  let xed3_operand_set_cet = foreign "xed3_operand_set_cet" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_chip = foreign "xed3_operand_set_chip" (decoded_inst_mut @-> chip_enum @-> returning void)
  let xed3_operand_set_cldemote = foreign "xed3_operand_set_cldemote" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_default_seg = foreign "xed3_operand_set_default_seg" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_df32 = foreign "xed3_operand_set_df32" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_df64 = foreign "xed3_operand_set_df64" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_disp = foreign "xed3_operand_set_disp" (decoded_inst_mut @-> int64_t @-> returning void)
  let xed3_operand_set_disp_width = foreign "xed3_operand_set_disp_width" (decoded_inst_mut @-> char @-> returning void)
  let xed3_operand_set_dummy = foreign "xed3_operand_set_dummy" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_easz = foreign "xed3_operand_set_easz" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_element_size = foreign "xed3_operand_set_element_size" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_encode_force = foreign "xed3_operand_set_encode_force" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_encoder_preferred = foreign "xed3_operand_set_encoder_preferred" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_eosz = foreign "xed3_operand_set_eosz" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_error = foreign "xed3_operand_set_error" (decoded_inst_mut @-> error_enum @-> returning void)
  let xed3_operand_set_esrc = foreign "xed3_operand_set_esrc" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_first_f2f3 = foreign "xed3_operand_set_first_f2f3" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_has_modrm = foreign "xed3_operand_set_has_modrm" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_has_sib = foreign "xed3_operand_set_has_sib" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_hint = foreign "xed3_operand_set_hint" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_iclass = foreign "xed3_operand_set_iclass" (decoded_inst_mut @-> iclass_enum @-> returning void)
  let xed3_operand_set_ild_f2 = foreign "xed3_operand_set_ild_f2" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_ild_f3 = foreign "xed3_operand_set_ild_f3" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_ild_seg = foreign "xed3_operand_set_ild_seg" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_imm0 = foreign "xed3_operand_set_imm0" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_imm0signed = foreign "xed3_operand_set_imm0signed" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_imm1 = foreign "xed3_operand_set_imm1" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_imm1_bytes = foreign "xed3_operand_set_imm1_bytes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_imm_width = foreign "xed3_operand_set_imm_width" (decoded_inst_mut @-> char @-> returning void)
  let xed3_operand_set_index = foreign "xed3_operand_set_index" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_last_f2f3 = foreign "xed3_operand_set_last_f2f3" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_llrc = foreign "xed3_operand_set_llrc" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_lock = foreign "xed3_operand_set_lock" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_lzcnt = foreign "xed3_operand_set_lzcnt" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_map = foreign "xed3_operand_set_map" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mask = foreign "xed3_operand_set_mask" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_max_bytes = foreign "xed3_operand_set_max_bytes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mem0 = foreign "xed3_operand_set_mem0" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mem1 = foreign "xed3_operand_set_mem1" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mem_width = foreign "xed3_operand_set_mem_width" (decoded_inst_mut @-> uint16_t @-> returning void)
  let xed3_operand_set_mod = foreign "xed3_operand_set_mod" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mode = foreign "xed3_operand_set_mode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mode_first_prefix = foreign "xed3_operand_set_mode_first_prefix" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mode_short_ud0 = foreign "xed3_operand_set_mode_short_ud0" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_modep5 = foreign "xed3_operand_set_modep5" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_modep55c = foreign "xed3_operand_set_modep55c" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_modrm_byte = foreign "xed3_operand_set_modrm_byte" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_mpxmode = foreign "xed3_operand_set_mpxmode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_must_use_evex = foreign "xed3_operand_set_must_use_evex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_need_memdisp = foreign "xed3_operand_set_need_memdisp" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_need_sib = foreign "xed3_operand_set_need_sib" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_needrex = foreign "xed3_operand_set_needrex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_nelem = foreign "xed3_operand_set_nelem" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_no_evex = foreign "xed3_operand_set_no_evex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_no_vex = foreign "xed3_operand_set_no_vex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_nominal_opcode = foreign "xed3_operand_set_nominal_opcode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_norex = foreign "xed3_operand_set_norex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_nprefixes = foreign "xed3_operand_set_nprefixes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_nrexes = foreign "xed3_operand_set_nrexes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_nseg_prefixes = foreign "xed3_operand_set_nseg_prefixes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_osz = foreign "xed3_operand_set_osz" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_out_of_bytes = foreign "xed3_operand_set_out_of_bytes" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_outreg = foreign "xed3_operand_set_outreg" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_p4 = foreign "xed3_operand_set_p4" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_disp = foreign "xed3_operand_set_pos_disp" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_imm = foreign "xed3_operand_set_pos_imm" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_imm1 = foreign "xed3_operand_set_pos_imm1" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_modrm = foreign "xed3_operand_set_pos_modrm" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_nominal_opcode = foreign "xed3_operand_set_pos_nominal_opcode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_pos_sib = foreign "xed3_operand_set_pos_sib" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_prefix66 = foreign "xed3_operand_set_prefix66" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_ptr = foreign "xed3_operand_set_ptr" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_realmode = foreign "xed3_operand_set_realmode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_reg = foreign "xed3_operand_set_reg" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_reg0 = foreign "xed3_operand_set_reg0" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg1 = foreign "xed3_operand_set_reg1" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg2 = foreign "xed3_operand_set_reg2" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg3 = foreign "xed3_operand_set_reg3" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg4 = foreign "xed3_operand_set_reg4" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg5 = foreign "xed3_operand_set_reg5" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg6 = foreign "xed3_operand_set_reg6" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg7 = foreign "xed3_operand_set_reg7" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg8 = foreign "xed3_operand_set_reg8" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_reg9 = foreign "xed3_operand_set_reg9" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_relbr = foreign "xed3_operand_set_relbr" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rep = foreign "xed3_operand_set_rep" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rex = foreign "xed3_operand_set_rex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rexb = foreign "xed3_operand_set_rexb" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rexr = foreign "xed3_operand_set_rexr" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rexrr = foreign "xed3_operand_set_rexrr" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rexw = foreign "xed3_operand_set_rexw" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rexx = foreign "xed3_operand_set_rexx" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_rm = foreign "xed3_operand_set_rm" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_roundc = foreign "xed3_operand_set_roundc" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_sae = foreign "xed3_operand_set_sae" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_scale = foreign "xed3_operand_set_scale" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_seg0 = foreign "xed3_operand_set_seg0" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_seg1 = foreign "xed3_operand_set_seg1" (decoded_inst_mut @-> reg_enum @-> returning void)
  let xed3_operand_set_seg_ovd = foreign "xed3_operand_set_seg_ovd" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_sibbase = foreign "xed3_operand_set_sibbase" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_sibindex = foreign "xed3_operand_set_sibindex" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_sibscale = foreign "xed3_operand_set_sibscale" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_smode = foreign "xed3_operand_set_smode" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_srm = foreign "xed3_operand_set_srm" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_tzcnt = foreign "xed3_operand_set_tzcnt" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_ubit = foreign "xed3_operand_set_ubit" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_uimm0 = foreign "xed3_operand_set_uimm0" (decoded_inst_mut @-> uint64_t @-> returning void)
  let xed3_operand_set_uimm1 = foreign "xed3_operand_set_uimm1" (decoded_inst_mut @-> char @-> returning void)
  let xed3_operand_set_using_default_segment0 = foreign "xed3_operand_set_using_default_segment0" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_using_default_segment1 = foreign "xed3_operand_set_using_default_segment1" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vex_c4 = foreign "xed3_operand_set_vex_c4" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vex_prefix = foreign "xed3_operand_set_vex_prefix" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vexdest210 = foreign "xed3_operand_set_vexdest210" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vexdest3 = foreign "xed3_operand_set_vexdest3" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vexdest4 = foreign "xed3_operand_set_vexdest4" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vexvalid = foreign "xed3_operand_set_vexvalid" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_vl = foreign "xed3_operand_set_vl" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_wbnoinvd = foreign "xed3_operand_set_wbnoinvd" (decoded_inst_mut @-> int @-> returning void)
  let xed3_operand_set_zeroing = foreign "xed3_operand_set_zeroing" (decoded_inst_mut @-> int @-> returning void)
  let xed_addr = foreign "xed_addr" (encoder_instruction_mut @-> int @-> returning void)
  let xed_address_width_enum_t2str = foreign "xed_address_width_enum_t2str" (address_width_enum @-> returning string)
  let xed_attribute = foreign "xed_attribute" (int @-> returning attribute_enum)
  let xed_attribute_enum_t2str = foreign "xed_attribute_enum_t2str" (attribute_enum @-> returning string)
  let xed_attribute_max = foreign "xed_attribute_max" (void @-> returning int)
  let xed_category_enum_t2str = foreign "xed_category_enum_t2str" (category_enum @-> returning string)
  let xed_chip_enum_t2str = foreign "xed_chip_enum_t2str" (chip_enum @-> returning string)
  let xed_classify_amx = foreign "xed_classify_amx" (decoded_inst_arg @-> returning bool)
  let xed_classify_avx = foreign "xed_classify_avx" (decoded_inst_arg @-> returning bool)
  let xed_classify_avx512 = foreign "xed_classify_avx512" (decoded_inst_arg @-> returning bool)
  let xed_classify_avx512_maskop = foreign "xed_classify_avx512_maskop" (decoded_inst_arg @-> returning bool)
  let xed_classify_sse = foreign "xed_classify_sse" (decoded_inst_arg @-> returning bool)
  let xed_convert_to_encoder_request = foreign "xed_convert_to_encoder_request" (encoder_request_mut @-> encoder_instruction_mut @-> returning bool)
  let xed_cpuid_bit_enum_t2str = foreign "xed_cpuid_bit_enum_t2str" (cpuid_bit_enum @-> returning string)
  let xed_decode = foreign "xed_decode" (decoded_inst_mut @-> ocaml_string @-> int @-> returning error_enum)
  let xed_decode_with_features = foreign "xed_decode_with_features" (decoded_inst_mut @-> ocaml_string @-> int @-> chip_features_mut @-> returning error_enum)
  let xed_decoded_inst_avx512_dest_elements = foreign "xed_decoded_inst_avx512_dest_elements" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_conditionally_writes_registers = foreign "xed_decoded_inst_conditionally_writes_registers" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_dump = foreign "xed_decoded_inst_dump" (decoded_inst_arg @-> ocaml_bytes @-> int @-> returning void)
  let xed_decoded_inst_dump_xed_format = foreign "xed_decoded_inst_dump_xed_format" (decoded_inst_arg @-> ocaml_bytes @-> int @-> uint64_t @-> returning bool)
  let xed_decoded_inst_get_attribute = foreign "xed_decoded_inst_get_attribute" (decoded_inst_arg @-> attribute_enum @-> returning uint32_t)
  let xed_decoded_inst_get_base_reg = foreign "xed_decoded_inst_get_base_reg" (decoded_inst_arg @-> int @-> returning reg_enum)
  let xed_decoded_inst_get_branch_displacement = foreign "xed_decoded_inst_get_branch_displacement" (decoded_inst_arg @-> returning int32_t)
  let xed_decoded_inst_get_branch_displacement_width = foreign "xed_decoded_inst_get_branch_displacement_width" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_branch_displacement_width_bits = foreign "xed_decoded_inst_get_branch_displacement_width_bits" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_byte = foreign "xed_decoded_inst_get_byte" (decoded_inst_arg @-> int @-> returning char)
  let xed_decoded_inst_get_category = foreign "xed_decoded_inst_get_category" (decoded_inst_arg @-> returning category_enum)
  let xed_decoded_inst_get_extension = foreign "xed_decoded_inst_get_extension" (decoded_inst_arg @-> returning extension_enum)
  let xed_decoded_inst_get_iclass = foreign "xed_decoded_inst_get_iclass" (decoded_inst_arg @-> returning iclass_enum)
  let xed_decoded_inst_get_iform_enum = foreign "xed_decoded_inst_get_iform_enum" (decoded_inst_arg @-> returning iform_enum)
  let xed_decoded_inst_get_iform_enum_dispatch = foreign "xed_decoded_inst_get_iform_enum_dispatch" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_immediate_is_signed = foreign "xed_decoded_inst_get_immediate_is_signed" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_immediate_width = foreign "xed_decoded_inst_get_immediate_width" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_immediate_width_bits = foreign "xed_decoded_inst_get_immediate_width_bits" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_index_reg = foreign "xed_decoded_inst_get_index_reg" (decoded_inst_arg @-> int @-> returning reg_enum)
  let xed_decoded_inst_get_input_chip = foreign "xed_decoded_inst_get_input_chip" (decoded_inst_arg @-> returning chip_enum)
  let xed_decoded_inst_get_isa_set = foreign "xed_decoded_inst_get_isa_set" (decoded_inst_arg @-> returning isa_set_enum)
  let xed_decoded_inst_get_length = foreign "xed_decoded_inst_get_length" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_machine_mode_bits = foreign "xed_decoded_inst_get_machine_mode_bits" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_memop_address_width = foreign "xed_decoded_inst_get_memop_address_width" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_get_memory_displacement = foreign "xed_decoded_inst_get_memory_displacement" (decoded_inst_arg @-> int @-> returning int64_t)
  let xed_decoded_inst_get_memory_displacement_width = foreign "xed_decoded_inst_get_memory_displacement_width" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_get_memory_displacement_width_bits = foreign "xed_decoded_inst_get_memory_displacement_width_bits" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_get_memory_operand_length = foreign "xed_decoded_inst_get_memory_operand_length" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_get_modrm = foreign "xed_decoded_inst_get_modrm" (decoded_inst_arg @-> returning char)
  let xed_decoded_inst_get_nprefixes = foreign "xed_decoded_inst_get_nprefixes" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_operand_width = foreign "xed_decoded_inst_get_operand_width" (decoded_inst_arg @-> returning uint32_t)
  let xed_decoded_inst_get_reg = foreign "xed_decoded_inst_get_reg" (decoded_inst_arg @-> operand_enum @-> returning reg_enum)
  let xed_decoded_inst_get_rflags_info = foreign "xed_decoded_inst_get_rflags_info" (decoded_inst_arg @-> returning simple_flag_ret)
  let xed_decoded_inst_get_scale = foreign "xed_decoded_inst_get_scale" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_get_second_immediate = foreign "xed_decoded_inst_get_second_immediate" (decoded_inst_arg @-> returning char)
  let xed_decoded_inst_get_seg_reg = foreign "xed_decoded_inst_get_seg_reg" (decoded_inst_arg @-> int @-> returning reg_enum)
  let xed_decoded_inst_get_signed_immediate = foreign "xed_decoded_inst_get_signed_immediate" (decoded_inst_arg @-> returning int32_t)
  let xed_decoded_inst_get_stack_address_mode_bits = foreign "xed_decoded_inst_get_stack_address_mode_bits" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_get_unsigned_immediate = foreign "xed_decoded_inst_get_unsigned_immediate" (decoded_inst_arg @-> returning uint64_t)
  let xed_decoded_inst_get_user_data = foreign "xed_decoded_inst_get_user_data" (decoded_inst_mut @-> returning uint64_t)
  let xed_decoded_inst_has_mpx_prefix = foreign "xed_decoded_inst_has_mpx_prefix" (decoded_inst_arg @-> returning uint32_t)
  let xed_decoded_inst_inst = foreign "xed_decoded_inst_inst" (decoded_inst_arg @-> returning inst_ret)
  let xed_decoded_inst_is_broadcast = foreign "xed_decoded_inst_is_broadcast" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_is_broadcast_instruction = foreign "xed_decoded_inst_is_broadcast_instruction" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_is_prefetch = foreign "xed_decoded_inst_is_prefetch" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_is_xacquire = foreign "xed_decoded_inst_is_xacquire" (decoded_inst_arg @-> returning uint32_t)
  let xed_decoded_inst_is_xrelease = foreign "xed_decoded_inst_is_xrelease" (decoded_inst_arg @-> returning uint32_t)
  let xed_decoded_inst_masked_vector_operation = foreign "xed_decoded_inst_masked_vector_operation" (decoded_inst_mut @-> returning bool)
  let xed_decoded_inst_masking = foreign "xed_decoded_inst_masking" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_mem_read = foreign "xed_decoded_inst_mem_read" (decoded_inst_arg @-> int @-> returning bool)
  let xed_decoded_inst_mem_written = foreign "xed_decoded_inst_mem_written" (decoded_inst_arg @-> int @-> returning bool)
  let xed_decoded_inst_mem_written_only = foreign "xed_decoded_inst_mem_written_only" (decoded_inst_arg @-> int @-> returning bool)
  let xed_decoded_inst_merging = foreign "xed_decoded_inst_merging" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_noperands = foreign "xed_decoded_inst_noperands" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_number_of_memory_operands = foreign "xed_decoded_inst_number_of_memory_operands" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_operand_action = foreign "xed_decoded_inst_operand_action" (decoded_inst_arg @-> int @-> returning operand_action_enum)
  let xed_decoded_inst_operand_element_size_bits = foreign "xed_decoded_inst_operand_element_size_bits" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_operand_element_type = foreign "xed_decoded_inst_operand_element_type" (decoded_inst_arg @-> int @-> returning operand_element_type_enum)
  let xed_decoded_inst_operand_elements = foreign "xed_decoded_inst_operand_elements" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_operand_length = foreign "xed_decoded_inst_operand_length" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_operand_length_bits = foreign "xed_decoded_inst_operand_length_bits" (decoded_inst_arg @-> int @-> returning int)
  let xed_decoded_inst_operands = foreign "xed_decoded_inst_operands" (decoded_inst_mut @-> returning operand_values_mut)
  let xed_decoded_inst_operands_const = foreign "xed_decoded_inst_operands_const" (decoded_inst_arg @-> returning operand_values_ret)
  let xed_decoded_inst_set_branch_displacement = foreign "xed_decoded_inst_set_branch_displacement" (decoded_inst_mut @-> int32_t @-> int @-> returning void)
  let xed_decoded_inst_set_branch_displacement_bits = foreign "xed_decoded_inst_set_branch_displacement_bits" (decoded_inst_mut @-> int32_t @-> int @-> returning void)
  let xed_decoded_inst_set_immediate_signed = foreign "xed_decoded_inst_set_immediate_signed" (decoded_inst_mut @-> int32_t @-> int @-> returning void)
  let xed_decoded_inst_set_immediate_signed_bits = foreign "xed_decoded_inst_set_immediate_signed_bits" (decoded_inst_mut @-> int32_t @-> int @-> returning void)
  let xed_decoded_inst_set_immediate_unsigned = foreign "xed_decoded_inst_set_immediate_unsigned" (decoded_inst_mut @-> uint64_t @-> int @-> returning void)
  let xed_decoded_inst_set_immediate_unsigned_bits = foreign "xed_decoded_inst_set_immediate_unsigned_bits" (decoded_inst_mut @-> uint64_t @-> int @-> returning void)
  let xed_decoded_inst_set_input_chip = foreign "xed_decoded_inst_set_input_chip" (decoded_inst_mut @-> chip_enum @-> returning void)
  let xed_decoded_inst_set_memory_displacement = foreign "xed_decoded_inst_set_memory_displacement" (decoded_inst_mut @-> int64_t @-> int @-> returning void)
  let xed_decoded_inst_set_memory_displacement_bits = foreign "xed_decoded_inst_set_memory_displacement_bits" (decoded_inst_mut @-> int64_t @-> int @-> returning void)
  let xed_decoded_inst_set_mode = foreign "xed_decoded_inst_set_mode" (decoded_inst_mut @-> machine_mode_enum @-> address_width_enum @-> returning void)
  let xed_decoded_inst_set_scale = foreign "xed_decoded_inst_set_scale" (decoded_inst_mut @-> int @-> returning void)
  let xed_decoded_inst_set_user_data = foreign "xed_decoded_inst_set_user_data" (decoded_inst_mut @-> uint64_t @-> returning void)
  let xed_decoded_inst_uses_embedded_broadcast = foreign "xed_decoded_inst_uses_embedded_broadcast" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_uses_rflags = foreign "xed_decoded_inst_uses_rflags" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_valid = foreign "xed_decoded_inst_valid" (decoded_inst_arg @-> returning bool)
  let xed_decoded_inst_valid_for_chip = foreign "xed_decoded_inst_valid_for_chip" (decoded_inst_arg @-> chip_enum @-> returning bool)
  let xed_decoded_inst_vector_length_bits = foreign "xed_decoded_inst_vector_length_bits" (decoded_inst_arg @-> returning int)
  let xed_decoded_inst_zero = foreign "xed_decoded_inst_zero" (decoded_inst_mut @-> returning void)
  let xed_decoded_inst_zero_keep_mode = foreign "xed_decoded_inst_zero_keep_mode" (decoded_inst_mut @-> returning void)
  let xed_decoded_inst_zero_keep_mode_from_operands = foreign "xed_decoded_inst_zero_keep_mode_from_operands" (decoded_inst_mut @-> operand_values_arg @-> returning void)
  let xed_decoded_inst_zero_set_mode = foreign "xed_decoded_inst_zero_set_mode" (decoded_inst_mut @-> state_arg @-> returning void)
  let xed_decoded_inst_zeroing = foreign "xed_decoded_inst_zeroing" (decoded_inst_arg @-> returning bool)
  let xed_disp = foreign "xed_disp" (int64_t @-> uint32_t @-> returning enc_displacement_view)
  let xed_encode_nop = foreign "xed_encode_nop" (ocaml_bytes @-> int @-> returning error_enum)
  let xed_encode_request_print = foreign "xed_encode_request_print" (encoder_request_arg @-> ocaml_bytes @-> int @-> returning void)
  let xed_encoder_request_get_iclass = foreign "xed_encoder_request_get_iclass" (encoder_request_arg @-> returning iclass_enum)
  let xed_encoder_request_get_operand_order = foreign "xed_encoder_request_get_operand_order" (encoder_request_mut @-> int @-> returning operand_enum)
  let xed_encoder_request_operand_order_entries = foreign "xed_encoder_request_operand_order_entries" (encoder_request_mut @-> returning int)
  let xed_encoder_request_operands = foreign "xed_encoder_request_operands" (encoder_request_mut @-> returning operand_values_mut)
  let xed_encoder_request_operands_const = foreign "xed_encoder_request_operands_const" (encoder_request_arg @-> returning operand_values_ret)
  let xed_encoder_request_set_agen = foreign "xed_encoder_request_set_agen" (encoder_request_mut @-> returning void)
  let xed_encoder_request_set_base0 = foreign "xed_encoder_request_set_base0" (encoder_request_mut @-> reg_enum @-> returning void)
  let xed_encoder_request_set_base1 = foreign "xed_encoder_request_set_base1" (encoder_request_mut @-> reg_enum @-> returning void)
  let xed_encoder_request_set_branch_displacement = foreign "xed_encoder_request_set_branch_displacement" (encoder_request_mut @-> int32_t @-> int @-> returning void)
  let xed_encoder_request_set_effective_address_size = foreign "xed_encoder_request_set_effective_address_size" (encoder_request_mut @-> int @-> returning void)
  let xed_encoder_request_set_effective_operand_width = foreign "xed_encoder_request_set_effective_operand_width" (encoder_request_mut @-> int @-> returning void)
  let xed_encoder_request_set_iclass = foreign "xed_encoder_request_set_iclass" (encoder_request_mut @-> iclass_enum @-> returning void)
  let xed_encoder_request_set_index = foreign "xed_encoder_request_set_index" (encoder_request_mut @-> reg_enum @-> returning void)
  let xed_encoder_request_set_mem0 = foreign "xed_encoder_request_set_mem0" (encoder_request_mut @-> returning void)
  let xed_encoder_request_set_mem1 = foreign "xed_encoder_request_set_mem1" (encoder_request_mut @-> returning void)
  let xed_encoder_request_set_memory_displacement = foreign "xed_encoder_request_set_memory_displacement" (encoder_request_mut @-> int64_t @-> int @-> returning void)
  let xed_encoder_request_set_memory_operand_length = foreign "xed_encoder_request_set_memory_operand_length" (encoder_request_mut @-> int @-> returning void)
  let xed_encoder_request_set_operand_order = foreign "xed_encoder_request_set_operand_order" (encoder_request_mut @-> int @-> operand_enum @-> returning void)
  let xed_encoder_request_set_ptr = foreign "xed_encoder_request_set_ptr" (encoder_request_mut @-> returning void)
  let xed_encoder_request_set_reg = foreign "xed_encoder_request_set_reg" (encoder_request_mut @-> operand_enum @-> reg_enum @-> returning void)
  let xed_encoder_request_set_relbr = foreign "xed_encoder_request_set_relbr" (encoder_request_mut @-> returning void)
  let xed_encoder_request_set_scale = foreign "xed_encoder_request_set_scale" (encoder_request_mut @-> int @-> returning void)
  let xed_encoder_request_set_seg0 = foreign "xed_encoder_request_set_seg0" (encoder_request_mut @-> reg_enum @-> returning void)
  let xed_encoder_request_set_seg1 = foreign "xed_encoder_request_set_seg1" (encoder_request_mut @-> reg_enum @-> returning void)
  let xed_encoder_request_set_simm = foreign "xed_encoder_request_set_simm" (encoder_request_mut @-> int32_t @-> int @-> returning void)
  let xed_encoder_request_set_uimm0 = foreign "xed_encoder_request_set_uimm0" (encoder_request_mut @-> uint64_t @-> int @-> returning void)
  let xed_encoder_request_set_uimm0_bits = foreign "xed_encoder_request_set_uimm0_bits" (encoder_request_mut @-> uint64_t @-> int @-> returning void)
  let xed_encoder_request_set_uimm1 = foreign "xed_encoder_request_set_uimm1" (encoder_request_mut @-> char @-> returning void)
  let xed_encoder_request_zero = foreign "xed_encoder_request_zero" (encoder_request_mut @-> returning void)
  let xed_encoder_request_zero_operand_order = foreign "xed_encoder_request_zero_operand_order" (encoder_request_mut @-> returning void)
  let xed_encoder_request_zero_set_mode = foreign "xed_encoder_request_zero_set_mode" (encoder_request_mut @-> state_arg @-> returning void)
  let xed_error_enum_t2str = foreign "xed_error_enum_t2str" (error_enum @-> returning string)
  let xed_exception_enum_t2str = foreign "xed_exception_enum_t2str" (iexception_enum @-> returning string)
  let xed_extension_enum_t2str = foreign "xed_extension_enum_t2str" (extension_enum @-> returning string)
  let xed_flag_action_action_invalid = foreign "xed_flag_action_action_invalid" (flag_action_enum @-> returning bool)
  let xed_flag_action_enum_t2str = foreign "xed_flag_action_enum_t2str" (flag_action_enum @-> returning string)
  let xed_flag_action_get_action = foreign "xed_flag_action_get_action" (flag_action_arg @-> int @-> returning flag_action_enum)
  let xed_flag_action_get_flag_name = foreign "xed_flag_action_get_flag_name" (flag_action_arg @-> returning flag_enum)
  let xed_flag_action_print = foreign "xed_flag_action_print" (flag_action_arg @-> ocaml_bytes @-> int @-> returning int)
  let xed_flag_action_read_action = foreign "xed_flag_action_read_action" (flag_action_enum @-> returning bool)
  let xed_flag_action_read_flag = foreign "xed_flag_action_read_flag" (flag_action_arg @-> returning bool)
  let xed_flag_action_write_action = foreign "xed_flag_action_write_action" (flag_action_enum @-> returning bool)
  let xed_flag_action_writes_flag = foreign "xed_flag_action_writes_flag" (flag_action_arg @-> returning bool)
  let xed_flag_enum_t2str = foreign "xed_flag_enum_t2str" (flag_enum @-> returning string)
  let xed_flag_set_is_subset_of = foreign "xed_flag_set_is_subset_of" (flag_set_arg @-> flag_set_arg @-> returning bool)
  let xed_flag_set_mask = foreign "xed_flag_set_mask" (flag_set_arg @-> returning int)
  let xed_flag_set_print = foreign "xed_flag_set_print" (flag_set_arg @-> ocaml_bytes @-> int @-> returning int)
  let xed_get_chip_features = foreign "xed_get_chip_features" (chip_features_mut @-> chip_enum @-> returning void)
  let xed_get_copyright = foreign "xed_get_copyright" (void @-> returning string)
  let xed_get_cpuid_bit_for_isa_set = foreign "xed_get_cpuid_bit_for_isa_set" (isa_set_enum @-> int @-> returning cpuid_bit_enum)
  let xed_get_largest_enclosing_register = foreign "xed_get_largest_enclosing_register" (reg_enum @-> returning reg_enum)
  let xed_get_largest_enclosing_register32 = foreign "xed_get_largest_enclosing_register32" (reg_enum @-> returning reg_enum)
  let xed_get_register_width_bits = foreign "xed_get_register_width_bits" (reg_enum @-> returning uint32_t)
  let xed_get_register_width_bits64 = foreign "xed_get_register_width_bits64" (reg_enum @-> returning uint32_t)
  let xed_get_version = foreign "xed_get_version" (void @-> returning string)
  let xed_gpr_reg_class = foreign "xed_gpr_reg_class" (reg_enum @-> returning reg_class_enum)
  let xed_iclass_enum_t2str = foreign "xed_iclass_enum_t2str" (iclass_enum @-> returning string)
  let xed_iform_enum_t2str = foreign "xed_iform_enum_t2str" (iform_enum @-> returning string)
  let xed_iform_first_per_iclass = foreign "xed_iform_first_per_iclass" (iclass_enum @-> returning uint32_t)
  let xed_iform_max_per_iclass = foreign "xed_iform_max_per_iclass" (iclass_enum @-> returning uint32_t)
  let xed_iform_to_category = foreign "xed_iform_to_category" (iform_enum @-> returning category_enum)
  let xed_iform_to_extension = foreign "xed_iform_to_extension" (iform_enum @-> returning extension_enum)
  let xed_iform_to_iclass = foreign "xed_iform_to_iclass" (iform_enum @-> returning iclass_enum)
  let xed_iform_to_iclass_string_att = foreign "xed_iform_to_iclass_string_att" (iform_enum @-> returning string)
  let xed_iform_to_iclass_string_intel = foreign "xed_iform_to_iclass_string_intel" (iform_enum @-> returning string)
  let xed_iform_to_isa_set = foreign "xed_iform_to_isa_set" (iform_enum @-> returning isa_set_enum)
  let xed_ild_decode = foreign "xed_ild_decode" (decoded_inst_mut @-> ocaml_string @-> int @-> returning error_enum)
  let xed_imm0 = foreign "xed_imm0" (uint64_t @-> int @-> returning encoder_operand_view)
  let xed_imm1 = foreign "xed_imm1" (char @-> returning encoder_operand_view)
  let xed_inst_category = foreign "xed_inst_category" (inst_arg @-> returning category_enum)
  let xed_inst_cpl = foreign "xed_inst_cpl" (inst_arg @-> returning int)
  let xed_inst_exception = foreign "xed_inst_exception" (inst_arg @-> returning iexception_enum)
  let xed_inst_extension = foreign "xed_inst_extension" (inst_arg @-> returning extension_enum)
  let xed_inst_flag_info_index = foreign "xed_inst_flag_info_index" (inst_arg @-> returning uint32_t)
  let xed_inst_get_attribute = foreign "xed_inst_get_attribute" (inst_arg @-> attribute_enum @-> returning uint32_t)
  let xed_inst_iclass = foreign "xed_inst_iclass" (inst_arg @-> returning iclass_enum)
  let xed_inst_iform_enum = foreign "xed_inst_iform_enum" (inst_arg @-> returning iform_enum)
  let xed_inst_isa_set = foreign "xed_inst_isa_set" (inst_arg @-> returning isa_set_enum)
  let xed_inst_noperands = foreign "xed_inst_noperands" (inst_arg @-> returning int)
  let xed_inst_operand = foreign "xed_inst_operand" (inst_arg @-> int @-> returning operand_ret)
  let xed_isa_set_enum_t2str = foreign "xed_isa_set_enum_t2str" (isa_set_enum @-> returning string)
  let xed_isa_set_is_valid_for_chip = foreign "xed_isa_set_is_valid_for_chip" (isa_set_enum @-> chip_enum @-> returning bool)
  let xed_machine_mode_enum_t2str = foreign "xed_machine_mode_enum_t2str" (machine_mode_enum @-> returning string)
  let xed_mem_b = foreign "xed_mem_b" (reg_enum @-> int @-> returning encoder_operand_view)
  let xed_mem_bd = foreign "xed_mem_bd" (reg_enum @-> enc_displacement_view @-> int @-> returning encoder_operand_view)
  let xed_mem_bisd = foreign "xed_mem_bisd" (reg_enum @-> reg_enum @-> int @-> enc_displacement_view @-> int @-> returning encoder_operand_view)
  let xed_mem_gb = foreign "xed_mem_gb" (reg_enum @-> reg_enum @-> int @-> returning encoder_operand_view)
  let xed_mem_gbd = foreign "xed_mem_gbd" (reg_enum @-> reg_enum @-> enc_displacement_view @-> int @-> returning encoder_operand_view)
  let xed_mem_gbisd = foreign "xed_mem_gbisd" (reg_enum @-> reg_enum @-> reg_enum @-> int @-> enc_displacement_view @-> int @-> returning encoder_operand_view)
  let xed_mem_gd = foreign "xed_mem_gd" (reg_enum @-> enc_displacement_view @-> int @-> returning encoder_operand_view)
  let xed_modify_chip_features = foreign "xed_modify_chip_features" (chip_features_mut @-> isa_set_enum @-> bool @-> returning void)
  let xed_nonterminal_enum_t2str = foreign "xed_nonterminal_enum_t2str" (nonterminal_enum @-> returning string)
  let xed_norep_map = foreign "xed_norep_map" (iclass_enum @-> returning iclass_enum)
  let xed_operand_action_conditional_read = foreign "xed_operand_action_conditional_read" (operand_action_enum @-> returning int)
  let xed_operand_action_conditional_write = foreign "xed_operand_action_conditional_write" (operand_action_enum @-> returning int)
  let xed_operand_action_enum_t2str = foreign "xed_operand_action_enum_t2str" (operand_action_enum @-> returning string)
  let xed_operand_action_read = foreign "xed_operand_action_read" (operand_action_enum @-> returning int)
  let xed_operand_action_read_and_written = foreign "xed_operand_action_read_and_written" (operand_action_enum @-> returning int)
  let xed_operand_action_read_only = foreign "xed_operand_action_read_only" (operand_action_enum @-> returning int)
  let xed_operand_action_written = foreign "xed_operand_action_written" (operand_action_enum @-> returning int)
  let xed_operand_action_written_only = foreign "xed_operand_action_written_only" (operand_action_enum @-> returning int)
  let xed_operand_conditional_read = foreign "xed_operand_conditional_read" (operand_arg @-> returning int)
  let xed_operand_conditional_write = foreign "xed_operand_conditional_write" (operand_arg @-> returning int)
  let xed_operand_convert_enum_t2str = foreign "xed_operand_convert_enum_t2str" (operand_convert_enum @-> returning string)
  let xed_operand_element_type_enum_t2str = foreign "xed_operand_element_type_enum_t2str" (operand_element_type_enum @-> returning string)
  let xed_operand_element_xtype_enum_t2str = foreign "xed_operand_element_xtype_enum_t2str" (operand_element_xtype_enum @-> returning string)
  let xed_operand_enum_t2str = foreign "xed_operand_enum_t2str" (operand_enum @-> returning string)
  let xed_operand_imm = foreign "xed_operand_imm" (operand_arg @-> returning uint32_t)
  let xed_operand_is_memory_addressing_register = foreign "xed_operand_is_memory_addressing_register" (operand_enum @-> returning int)
  let xed_operand_is_register = foreign "xed_operand_is_register" (operand_enum @-> returning int)
  let xed_operand_name = foreign "xed_operand_name" (operand_arg @-> returning operand_enum)
  let xed_operand_nonterminal_name = foreign "xed_operand_nonterminal_name" (operand_arg @-> returning nonterminal_enum)
  let xed_operand_operand_visibility = foreign "xed_operand_operand_visibility" (operand_arg @-> returning operand_visibility_enum)
  let xed_operand_print = foreign "xed_operand_print" (operand_arg @-> ocaml_bytes @-> int @-> returning void)
  let xed_operand_read = foreign "xed_operand_read" (operand_arg @-> returning int)
  let xed_operand_read_and_written = foreign "xed_operand_read_and_written" (operand_arg @-> returning int)
  let xed_operand_read_only = foreign "xed_operand_read_only" (operand_arg @-> returning int)
  let xed_operand_reg = foreign "xed_operand_reg" (operand_arg @-> returning reg_enum)
  let xed_operand_rw = foreign "xed_operand_rw" (operand_arg @-> returning operand_action_enum)
  let xed_operand_template_is_register = foreign "xed_operand_template_is_register" (operand_arg @-> returning int)
  let xed_operand_type = foreign "xed_operand_type" (operand_arg @-> returning operand_type_enum)
  let xed_operand_type_enum_t2str = foreign "xed_operand_type_enum_t2str" (operand_type_enum @-> returning string)
  let xed_operand_values_accesses_memory = foreign "xed_operand_values_accesses_memory" (operand_values_arg @-> returning bool)
  let xed_operand_values_branch_not_taken_hint = foreign "xed_operand_values_branch_not_taken_hint" (operand_values_arg @-> returning bool)
  let xed_operand_values_branch_taken_hint = foreign "xed_operand_values_branch_taken_hint" (operand_values_arg @-> returning bool)
  let xed_operand_values_cet_no_track = foreign "xed_operand_values_cet_no_track" (operand_values_arg @-> returning bool)
  let xed_operand_values_clear_rep = foreign "xed_operand_values_clear_rep" (operand_values_mut @-> returning void)
  let xed_operand_values_dump = foreign "xed_operand_values_dump" (operand_values_arg @-> ocaml_bytes @-> int @-> returning void)
  let xed_operand_values_get_atomic = foreign "xed_operand_values_get_atomic" (operand_values_arg @-> returning bool)
  let xed_operand_values_get_base_reg = foreign "xed_operand_values_get_base_reg" (operand_values_arg @-> int @-> returning reg_enum)
  let xed_operand_values_get_branch_displacement_byte = foreign "xed_operand_values_get_branch_displacement_byte" (operand_values_arg @-> int @-> returning char)
  let xed_operand_values_get_branch_displacement_int32 = foreign "xed_operand_values_get_branch_displacement_int32" (operand_values_arg @-> returning int32_t)
  let xed_operand_values_get_branch_displacement_length = foreign "xed_operand_values_get_branch_displacement_length" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_branch_displacement_length_bits = foreign "xed_operand_values_get_branch_displacement_length_bits" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_displacement_for_memop = foreign "xed_operand_values_get_displacement_for_memop" (operand_values_arg @-> returning bool)
  let xed_operand_values_get_effective_address_width = foreign "xed_operand_values_get_effective_address_width" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_effective_operand_width = foreign "xed_operand_values_get_effective_operand_width" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_iclass = foreign "xed_operand_values_get_iclass" (operand_values_arg @-> returning iclass_enum)
  let xed_operand_values_get_immediate_byte = foreign "xed_operand_values_get_immediate_byte" (operand_values_arg @-> int @-> returning char)
  let xed_operand_values_get_immediate_int64 = foreign "xed_operand_values_get_immediate_int64" (operand_values_arg @-> returning int64_t)
  let xed_operand_values_get_immediate_is_signed = foreign "xed_operand_values_get_immediate_is_signed" (operand_values_arg @-> returning int)
  let xed_operand_values_get_immediate_uint64 = foreign "xed_operand_values_get_immediate_uint64" (operand_values_arg @-> returning uint64_t)
  let xed_operand_values_get_index_reg = foreign "xed_operand_values_get_index_reg" (operand_values_arg @-> int @-> returning reg_enum)
  let xed_operand_values_get_long_mode = foreign "xed_operand_values_get_long_mode" (operand_values_arg @-> returning bool)
  let xed_operand_values_get_memory_displacement_byte = foreign "xed_operand_values_get_memory_displacement_byte" (operand_values_arg @-> int @-> returning char)
  let xed_operand_values_get_memory_displacement_int64 = foreign "xed_operand_values_get_memory_displacement_int64" (operand_values_arg @-> returning int64_t)
  let xed_operand_values_get_memory_displacement_int64_raw = foreign "xed_operand_values_get_memory_displacement_int64_raw" (operand_values_arg @-> returning int64_t)
  let xed_operand_values_get_memory_displacement_length = foreign "xed_operand_values_get_memory_displacement_length" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_memory_displacement_length_bits = foreign "xed_operand_values_get_memory_displacement_length_bits" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_memory_displacement_length_bits_raw = foreign "xed_operand_values_get_memory_displacement_length_bits_raw" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_get_memory_operand_length = foreign "xed_operand_values_get_memory_operand_length" (operand_values_arg @-> int @-> returning int)
  let xed_operand_values_get_real_mode = foreign "xed_operand_values_get_real_mode" (operand_values_arg @-> returning bool)
  let xed_operand_values_get_scale = foreign "xed_operand_values_get_scale" (operand_values_arg @-> returning int)
  let xed_operand_values_get_second_immediate = foreign "xed_operand_values_get_second_immediate" (operand_values_arg @-> returning char)
  let xed_operand_values_get_seg_reg = foreign "xed_operand_values_get_seg_reg" (operand_values_arg @-> int @-> returning reg_enum)
  let xed_operand_values_get_stack_address_width = foreign "xed_operand_values_get_stack_address_width" (operand_values_arg @-> returning uint32_t)
  let xed_operand_values_has_66_prefix = foreign "xed_operand_values_has_66_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_address_size_prefix = foreign "xed_operand_values_has_address_size_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_branch_displacement = foreign "xed_operand_values_has_branch_displacement" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_displacement = foreign "xed_operand_values_has_displacement" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_immediate = foreign "xed_operand_values_has_immediate" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_lock_prefix = foreign "xed_operand_values_has_lock_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_memory_displacement = foreign "xed_operand_values_has_memory_displacement" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_modrm_byte = foreign "xed_operand_values_has_modrm_byte" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_operand_size_prefix = foreign "xed_operand_values_has_operand_size_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_real_rep = foreign "xed_operand_values_has_real_rep" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_rep_prefix = foreign "xed_operand_values_has_rep_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_repne_prefix = foreign "xed_operand_values_has_repne_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_rexw_prefix = foreign "xed_operand_values_has_rexw_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_segment_prefix = foreign "xed_operand_values_has_segment_prefix" (operand_values_arg @-> returning bool)
  let xed_operand_values_has_sib_byte = foreign "xed_operand_values_has_sib_byte" (operand_values_arg @-> returning bool)
  let xed_operand_values_init = foreign "xed_operand_values_init" (operand_values_mut @-> returning void)
  let xed_operand_values_init_keep_mode = foreign "xed_operand_values_init_keep_mode" (operand_values_mut @-> operand_values_arg @-> returning void)
  let xed_operand_values_init_set_mode = foreign "xed_operand_values_init_set_mode" (operand_values_mut @-> state_arg @-> returning void)
  let xed_operand_values_is_nop = foreign "xed_operand_values_is_nop" (operand_values_arg @-> returning bool)
  let xed_operand_values_lockable = foreign "xed_operand_values_lockable" (operand_values_arg @-> returning bool)
  let xed_operand_values_memop_without_modrm = foreign "xed_operand_values_memop_without_modrm" (operand_values_arg @-> returning bool)
  let xed_operand_values_number_of_memory_operands = foreign "xed_operand_values_number_of_memory_operands" (operand_values_arg @-> returning int)
  let xed_operand_values_print_short = foreign "xed_operand_values_print_short" (operand_values_arg @-> ocaml_bytes @-> int @-> returning void)
  let xed_operand_values_segment_prefix = foreign "xed_operand_values_segment_prefix" (operand_values_arg @-> returning reg_enum)
  let xed_operand_values_set_base_reg = foreign "xed_operand_values_set_base_reg" (operand_values_mut @-> int @-> reg_enum @-> returning void)
  let xed_operand_values_set_branch_displacement = foreign "xed_operand_values_set_branch_displacement" (operand_values_mut @-> int32_t @-> int @-> returning void)
  let xed_operand_values_set_branch_displacement_bits = foreign "xed_operand_values_set_branch_displacement_bits" (operand_values_mut @-> int32_t @-> int @-> returning void)
  let xed_operand_values_set_effective_address_width = foreign "xed_operand_values_set_effective_address_width" (operand_values_mut @-> int @-> returning void)
  let xed_operand_values_set_effective_operand_width = foreign "xed_operand_values_set_effective_operand_width" (operand_values_mut @-> int @-> returning void)
  let xed_operand_values_set_iclass = foreign "xed_operand_values_set_iclass" (operand_values_mut @-> iclass_enum @-> returning void)
  let xed_operand_values_set_immediate_signed = foreign "xed_operand_values_set_immediate_signed" (operand_values_mut @-> int32_t @-> int @-> returning void)
  let xed_operand_values_set_immediate_signed_bits = foreign "xed_operand_values_set_immediate_signed_bits" (operand_values_mut @-> int32_t @-> int @-> returning void)
  let xed_operand_values_set_immediate_unsigned = foreign "xed_operand_values_set_immediate_unsigned" (operand_values_mut @-> uint64_t @-> int @-> returning void)
  let xed_operand_values_set_immediate_unsigned_bits = foreign "xed_operand_values_set_immediate_unsigned_bits" (operand_values_mut @-> uint64_t @-> int @-> returning void)
  let xed_operand_values_set_index_reg = foreign "xed_operand_values_set_index_reg" (operand_values_mut @-> int @-> reg_enum @-> returning void)
  let xed_operand_values_set_lock = foreign "xed_operand_values_set_lock" (operand_values_mut @-> returning void)
  let xed_operand_values_set_memory_displacement = foreign "xed_operand_values_set_memory_displacement" (operand_values_mut @-> int64_t @-> int @-> returning void)
  let xed_operand_values_set_memory_displacement_bits = foreign "xed_operand_values_set_memory_displacement_bits" (operand_values_mut @-> int64_t @-> int @-> returning void)
  let xed_operand_values_set_memory_operand_length = foreign "xed_operand_values_set_memory_operand_length" (operand_values_mut @-> int @-> returning void)
  let xed_operand_values_set_mode = foreign "xed_operand_values_set_mode" (operand_values_mut @-> state_arg @-> returning void)
  let xed_operand_values_set_operand_reg = foreign "xed_operand_values_set_operand_reg" (operand_values_mut @-> operand_enum @-> reg_enum @-> returning void)
  let xed_operand_values_set_relbr = foreign "xed_operand_values_set_relbr" (operand_values_mut @-> returning void)
  let xed_operand_values_set_scale = foreign "xed_operand_values_set_scale" (operand_values_mut @-> int @-> int @-> returning void)
  let xed_operand_values_set_seg_reg = foreign "xed_operand_values_set_seg_reg" (operand_values_mut @-> int @-> reg_enum @-> returning void)
  let xed_operand_values_using_default_segment = foreign "xed_operand_values_using_default_segment" (operand_values_arg @-> int @-> returning bool)
  let xed_operand_values_zero_branch_displacement = foreign "xed_operand_values_zero_branch_displacement" (operand_values_mut @-> returning void)
  let xed_operand_values_zero_immediate = foreign "xed_operand_values_zero_immediate" (operand_values_mut @-> returning void)
  let xed_operand_values_zero_memory_displacement = foreign "xed_operand_values_zero_memory_displacement" (operand_values_mut @-> returning void)
  let xed_operand_values_zero_segment_override = foreign "xed_operand_values_zero_segment_override" (operand_values_mut @-> returning void)
  let xed_operand_visibility_enum_t2str = foreign "xed_operand_visibility_enum_t2str" (operand_visibility_enum @-> returning string)
  let xed_operand_width = foreign "xed_operand_width" (operand_arg @-> returning operand_width_enum)
  let xed_operand_width_bits = foreign "xed_operand_width_bits" (operand_arg @-> uint32_t @-> returning uint32_t)
  let xed_operand_width_enum_t2str = foreign "xed_operand_width_enum_t2str" (operand_width_enum @-> returning string)
  let xed_operand_written = foreign "xed_operand_written" (operand_arg @-> returning int)
  let xed_operand_written_only = foreign "xed_operand_written_only" (operand_arg @-> returning int)
  let xed_operand_xtype = foreign "xed_operand_xtype" (operand_arg @-> returning operand_element_xtype_enum)
  let xed_other = foreign "xed_other" (operand_enum @-> int32_t @-> returning encoder_operand_view)
  let xed_ptr = foreign "xed_ptr" (int32_t @-> int @-> returning encoder_operand_view)
  let xed_reg = foreign "xed_reg" (reg_enum @-> returning encoder_operand_view)
  let xed_reg_class = foreign "xed_reg_class" (reg_enum @-> returning reg_class_enum)
  let xed_reg_class_enum_t2str = foreign "xed_reg_class_enum_t2str" (reg_class_enum @-> returning string)
  let xed_reg_enum_t2str = foreign "xed_reg_enum_t2str" (reg_enum @-> returning string)
  let xed_relbr = foreign "xed_relbr" (int32_t @-> int @-> returning encoder_operand_view)
  let xed_rep = foreign "xed_rep" (encoder_instruction_mut @-> returning void)
  let xed_rep_map = foreign "xed_rep_map" (iclass_enum @-> returning iclass_enum)
  let xed_rep_remove = foreign "xed_rep_remove" (iclass_enum @-> returning iclass_enum)
  let xed_repe_map = foreign "xed_repe_map" (iclass_enum @-> returning iclass_enum)
  let xed_repne = foreign "xed_repne" (encoder_instruction_mut @-> returning void)
  let xed_repne_map = foreign "xed_repne_map" (iclass_enum @-> returning iclass_enum)
  let xed_seg0 = foreign "xed_seg0" (reg_enum @-> returning encoder_operand_view)
  let xed_seg1 = foreign "xed_seg1" (reg_enum @-> returning encoder_operand_view)
  let xed_set_verbosity = foreign "xed_set_verbosity" (int @-> returning void)
  let xed_simm0 = foreign "xed_simm0" (int32_t @-> int @-> returning encoder_operand_view)
  let xed_simple_flag_get_flag_action = foreign "xed_simple_flag_get_flag_action" (simple_flag_arg @-> int @-> returning flag_action_ret)
  let xed_simple_flag_get_may_write = foreign "xed_simple_flag_get_may_write" (simple_flag_arg @-> returning bool)
  let xed_simple_flag_get_must_write = foreign "xed_simple_flag_get_must_write" (simple_flag_arg @-> returning bool)
  let xed_simple_flag_get_nflags = foreign "xed_simple_flag_get_nflags" (simple_flag_arg @-> returning int)
  let xed_simple_flag_get_read_flag_set = foreign "xed_simple_flag_get_read_flag_set" (simple_flag_arg @-> returning flag_set_ret)
  let xed_simple_flag_get_undefined_flag_set = foreign "xed_simple_flag_get_undefined_flag_set" (simple_flag_arg @-> returning flag_set_ret)
  let xed_simple_flag_get_written_flag_set = foreign "xed_simple_flag_get_written_flag_set" (simple_flag_arg @-> returning flag_set_ret)
  let xed_simple_flag_print = foreign "xed_simple_flag_print" (simple_flag_arg @-> ocaml_bytes @-> int @-> returning int)
  let xed_simple_flag_reads_flags = foreign "xed_simple_flag_reads_flags" (simple_flag_arg @-> returning bool)
  let xed_simple_flag_writes_flags = foreign "xed_simple_flag_writes_flags" (simple_flag_arg @-> returning bool)
  let xed_state_get_address_width = foreign "xed_state_get_address_width" (state_arg @-> returning address_width_enum)
  let xed_state_get_machine_mode = foreign "xed_state_get_machine_mode" (state_arg @-> returning machine_mode_enum)
  let xed_state_get_stack_address_width = foreign "xed_state_get_stack_address_width" (state_arg @-> returning address_width_enum)
  let xed_state_init = foreign "xed_state_init" (state_mut @-> machine_mode_enum @-> address_width_enum @-> address_width_enum @-> returning void)
  let xed_state_init2 = foreign "xed_state_init2" (state_mut @-> machine_mode_enum @-> address_width_enum @-> returning void)
  let xed_state_long64_mode = foreign "xed_state_long64_mode" (state_arg @-> returning bool)
  let xed_state_mode_width_16 = foreign "xed_state_mode_width_16" (state_arg @-> returning bool)
  let xed_state_mode_width_32 = foreign "xed_state_mode_width_32" (state_arg @-> returning bool)
  let xed_state_print = foreign "xed_state_print" (state_arg @-> ocaml_bytes @-> int @-> returning int)
  let xed_state_real_mode = foreign "xed_state_real_mode" (state_arg @-> returning bool)
  let xed_state_set_machine_mode = foreign "xed_state_set_machine_mode" (state_mut @-> machine_mode_enum @-> returning void)
  let xed_state_set_stack_address_width = foreign "xed_state_set_stack_address_width" (state_mut @-> address_width_enum @-> returning void)
  let xed_state_zero = foreign "xed_state_zero" (state_mut @-> returning void)
  let xed_syntax_enum_t2str = foreign "xed_syntax_enum_t2str" (syntax_enum @-> returning string)
  let xed_tables_init = foreign "xed_tables_init" (void @-> returning void)
end
